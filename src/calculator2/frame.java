/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator2;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Avi's computer
 */
public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    private boolean negative=false;
    public frame() {
        //set the design to a better one then the default
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //se the jframe icon
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("calculator.png")));
        //make the calculator
        initComponents();
        //center frame
        Dimension dim=Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /******************************
    My methods
    ******************************/
    public void addNumber(String num) {
        if (enter.getText().length()>=15) {
            return;
        }
        if (enter.getText().equals("0")||enter.getText().equals("O")) {
            enter.setText(num);
        }
        else {
            enter.setText(enter.getText()+num);
        }
    }
    
    public void addOperation(String operation) {
        if (enter.getText().equals("0")) {
            return;
        }
        else if (enter.getText().equals("O")) {
            equation.setText(equation.getText()+operation);
            return;
        }
        equation.setText(equation.getText()+enter.getText()+operation);
        enter.setText("0");
        negative=false;
    }
    
    public String preprocess(String equation) {
        //change √ to Math.sqrt
        equation=equation.replace("√", "Math.sqrt");
        //change % to number divided by 100
        equation=equation.replace("%", "/100");
        //change Mod to %
        equation=equation.replace("Mod", "%");
        return equation;
    }
    
    public boolean isOperation(char operation) {
        //d is for Mod
        return operation=='+'||operation=='-'||operation=='*'||operation=='/'||operation=='d';
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JLabel();
        ContentPanel = new javax.swing.JPanel();
        NumberPanel = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        mod = new javax.swing.JButton();
        C = new javax.swing.JButton();
        plusMinus = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        oneOverX = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        equals = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        add = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        topPanel = new javax.swing.JPanel();
        equation = new javax.swing.JLabel();
        enter = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        copy = new javax.swing.JMenuItem();
        paste = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setResizable(false);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator2/background.png"))); // NOI18N

        ContentPanel.setBackground(new java.awt.Color(204, 204, 204));
        ContentPanel.setOpaque(false);

        NumberPanel.setFocusable(false);
        NumberPanel.setOpaque(false);

        back.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        back.setText("<html><body>&#8592;</body></html>");
        back.setFocusable(false);
        back.setMargin(new java.awt.Insets(0, 0, 0, 0));
        back.setMaximumSize(new java.awt.Dimension(35, 27));
        back.setMinimumSize(new java.awt.Dimension(35, 27));
        back.setOpaque(false);
        back.setPreferredSize(new java.awt.Dimension(37, 27));
        back.setRequestFocusEnabled(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        mod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mod.setText("Mod");
        mod.setMargin(new java.awt.Insets(0, 0, 0, 0));
        mod.setMaximumSize(new java.awt.Dimension(35, 27));
        mod.setMinimumSize(new java.awt.Dimension(35, 27));
        mod.setOpaque(false);
        mod.setPreferredSize(new java.awt.Dimension(37, 27));
        mod.setRequestFocusEnabled(false);
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });

        C.setBackground(new java.awt.Color(204, 204, 255));
        C.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        C.setText("C");
        C.setFocusable(false);
        C.setMargin(new java.awt.Insets(0, 0, 0, 0));
        C.setMaximumSize(new java.awt.Dimension(35, 27));
        C.setMinimumSize(new java.awt.Dimension(35, 27));
        C.setOpaque(false);
        C.setPreferredSize(new java.awt.Dimension(37, 27));
        C.setRequestFocusEnabled(false);
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        plusMinus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        plusMinus.setText("±");
        plusMinus.setFocusable(false);
        plusMinus.setMargin(new java.awt.Insets(0, 0, 0, 0));
        plusMinus.setMaximumSize(new java.awt.Dimension(35, 27));
        plusMinus.setMinimumSize(new java.awt.Dimension(35, 27));
        plusMinus.setOpaque(false);
        plusMinus.setPreferredSize(new java.awt.Dimension(37, 27));
        plusMinus.setRequestFocusEnabled(false);
        plusMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusMinusActionPerformed(evt);
            }
        });

        sqrt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sqrt.setText("√");
        sqrt.setFocusable(false);
        sqrt.setMargin(new java.awt.Insets(0, 0, 0, 0));
        sqrt.setMaximumSize(new java.awt.Dimension(35, 27));
        sqrt.setMinimumSize(new java.awt.Dimension(35, 27));
        sqrt.setOpaque(false);
        sqrt.setPreferredSize(new java.awt.Dimension(37, 27));
        sqrt.setRequestFocusEnabled(false);
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });

        seven.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seven.setText("7");
        seven.setFocusable(false);
        seven.setMargin(new java.awt.Insets(0, 0, 0, 0));
        seven.setMaximumSize(new java.awt.Dimension(35, 27));
        seven.setMinimumSize(new java.awt.Dimension(35, 27));
        seven.setOpaque(false);
        seven.setPreferredSize(new java.awt.Dimension(37, 27));
        seven.setRequestFocusEnabled(false);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eight.setText("8");
        eight.setFocusable(false);
        eight.setMargin(new java.awt.Insets(0, 0, 0, 0));
        eight.setMaximumSize(new java.awt.Dimension(35, 27));
        eight.setMinimumSize(new java.awt.Dimension(35, 27));
        eight.setOpaque(false);
        eight.setPreferredSize(new java.awt.Dimension(37, 27));
        eight.setRequestFocusEnabled(false);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nine.setText("9");
        nine.setFocusable(false);
        nine.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nine.setMaximumSize(new java.awt.Dimension(35, 27));
        nine.setMinimumSize(new java.awt.Dimension(35, 27));
        nine.setOpaque(false);
        nine.setPreferredSize(new java.awt.Dimension(37, 27));
        nine.setRequestFocusEnabled(false);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        divide.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        divide.setText("/");
        divide.setFocusable(false);
        divide.setMargin(new java.awt.Insets(0, 0, 0, 0));
        divide.setMaximumSize(new java.awt.Dimension(35, 27));
        divide.setMinimumSize(new java.awt.Dimension(35, 27));
        divide.setOpaque(false);
        divide.setPreferredSize(new java.awt.Dimension(37, 27));
        divide.setRequestFocusEnabled(false);
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        percent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        percent.setText("%");
        percent.setFocusable(false);
        percent.setMargin(new java.awt.Insets(0, 0, 0, 0));
        percent.setMaximumSize(new java.awt.Dimension(35, 27));
        percent.setMinimumSize(new java.awt.Dimension(35, 27));
        percent.setOpaque(false);
        percent.setPreferredSize(new java.awt.Dimension(37, 27));
        percent.setRequestFocusEnabled(false);
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        four.setText("4");
        four.setFocusable(false);
        four.setMargin(new java.awt.Insets(0, 0, 0, 0));
        four.setMaximumSize(new java.awt.Dimension(35, 27));
        four.setMinimumSize(new java.awt.Dimension(35, 27));
        four.setOpaque(false);
        four.setPreferredSize(new java.awt.Dimension(37, 27));
        four.setRequestFocusEnabled(false);
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        five.setText("5");
        five.setFocusable(false);
        five.setMargin(new java.awt.Insets(0, 0, 0, 0));
        five.setMaximumSize(new java.awt.Dimension(35, 27));
        five.setMinimumSize(new java.awt.Dimension(35, 27));
        five.setOpaque(false);
        five.setPreferredSize(new java.awt.Dimension(37, 27));
        five.setRequestFocusEnabled(false);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        six.setText("6");
        six.setFocusable(false);
        six.setMargin(new java.awt.Insets(0, 0, 0, 0));
        six.setMaximumSize(new java.awt.Dimension(35, 27));
        six.setMinimumSize(new java.awt.Dimension(35, 27));
        six.setOpaque(false);
        six.setPreferredSize(new java.awt.Dimension(37, 27));
        six.setRequestFocusEnabled(false);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        multiply.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        multiply.setText("*");
        multiply.setFocusable(false);
        multiply.setMargin(new java.awt.Insets(0, 0, 0, 0));
        multiply.setMaximumSize(new java.awt.Dimension(35, 27));
        multiply.setMinimumSize(new java.awt.Dimension(35, 27));
        multiply.setOpaque(false);
        multiply.setPreferredSize(new java.awt.Dimension(37, 27));
        multiply.setRequestFocusEnabled(false);
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        oneOverX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        oneOverX.setText("1/x");
        oneOverX.setFocusable(false);
        oneOverX.setMargin(new java.awt.Insets(0, 0, 0, 0));
        oneOverX.setMaximumSize(new java.awt.Dimension(35, 27));
        oneOverX.setMinimumSize(new java.awt.Dimension(35, 27));
        oneOverX.setOpaque(false);
        oneOverX.setPreferredSize(new java.awt.Dimension(37, 27));
        oneOverX.setRequestFocusEnabled(false);
        oneOverX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneOverXActionPerformed(evt);
            }
        });

        one.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        one.setText("1");
        one.setFocusable(false);
        one.setMargin(new java.awt.Insets(0, 0, 0, 0));
        one.setMaximumSize(new java.awt.Dimension(35, 27));
        one.setMinimumSize(new java.awt.Dimension(35, 27));
        one.setOpaque(false);
        one.setPreferredSize(new java.awt.Dimension(37, 27));
        one.setRequestFocusEnabled(false);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        two.setText("2");
        two.setFocusable(false);
        two.setMargin(new java.awt.Insets(0, 0, 0, 0));
        two.setMaximumSize(new java.awt.Dimension(35, 27));
        two.setMinimumSize(new java.awt.Dimension(35, 27));
        two.setOpaque(false);
        two.setPreferredSize(new java.awt.Dimension(37, 27));
        two.setRequestFocusEnabled(false);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        three.setText("3");
        three.setFocusable(false);
        three.setMargin(new java.awt.Insets(0, 0, 0, 0));
        three.setMaximumSize(new java.awt.Dimension(35, 27));
        three.setMinimumSize(new java.awt.Dimension(35, 27));
        three.setOpaque(false);
        three.setPreferredSize(new java.awt.Dimension(37, 27));
        three.setRequestFocusEnabled(false);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        subtract.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subtract.setText("-");
        subtract.setFocusable(false);
        subtract.setMargin(new java.awt.Insets(0, 0, 0, 0));
        subtract.setMaximumSize(new java.awt.Dimension(35, 27));
        subtract.setMinimumSize(new java.awt.Dimension(35, 27));
        subtract.setOpaque(false);
        subtract.setPreferredSize(new java.awt.Dimension(37, 27));
        subtract.setRequestFocusEnabled(false);
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        equals.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        equals.setText("=");
        equals.setFocusable(false);
        equals.setMargin(new java.awt.Insets(0, 0, 0, 0));
        equals.setMaximumSize(new java.awt.Dimension(35, 27));
        equals.setMinimumSize(new java.awt.Dimension(35, 27));
        equals.setOpaque(false);
        equals.setPreferredSize(new java.awt.Dimension(37, 27));
        equals.setRequestFocusEnabled(false);
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        zero.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zero.setText("0");
        zero.setFocusable(false);
        zero.setMargin(new java.awt.Insets(0, 0, 0, 0));
        zero.setMaximumSize(new java.awt.Dimension(35, 27));
        zero.setMinimumSize(new java.awt.Dimension(35, 27));
        zero.setOpaque(false);
        zero.setPreferredSize(new java.awt.Dimension(37, 27));
        zero.setRequestFocusEnabled(false);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        dot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dot.setText(".");
        dot.setFocusable(false);
        dot.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dot.setMaximumSize(new java.awt.Dimension(35, 27));
        dot.setMinimumSize(new java.awt.Dimension(35, 27));
        dot.setOpaque(false);
        dot.setPreferredSize(new java.awt.Dimension(37, 27));
        dot.setRequestFocusEnabled(false);
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add.setText("+");
        add.setFocusable(false);
        add.setMargin(new java.awt.Insets(0, 0, 0, 0));
        add.setMaximumSize(new java.awt.Dimension(35, 27));
        add.setMinimumSize(new java.awt.Dimension(35, 27));
        add.setOpaque(false);
        add.setPreferredSize(new java.awt.Dimension(37, 27));
        add.setRequestFocusEnabled(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NumberPanelLayout = new javax.swing.GroupLayout(NumberPanel);
        NumberPanel.setLayout(NumberPanelLayout);
        NumberPanelLayout.setHorizontalGroup(
            NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumberPanelLayout.createSequentialGroup()
                .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NumberPanelLayout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NumberPanelLayout.createSequentialGroup()
                        .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NumberPanelLayout.createSequentialGroup()
                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oneOverX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NumberPanelLayout.createSequentialGroup()
                        .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(NumberPanelLayout.createSequentialGroup()
                                .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(NumberPanelLayout.createSequentialGroup()
                                .addComponent(zero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        NumberPanelLayout.setVerticalGroup(
            NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumberPanelLayout.createSequentialGroup()
                .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oneOverX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(NumberPanelLayout.createSequentialGroup()
                        .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(equals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        scrollPane.setBorder(null);
        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        topPanel.setMaximumSize(new java.awt.Dimension(8, 74));
        topPanel.setMinimumSize(new java.awt.Dimension(8, 74));

        equation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        equation.setText(" ");
        equation.setFocusable(false);

        enter.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        enter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        enter.setText("0");
        enter.setFocusCycleRoot(true);
        enter.setFocusTraversalPolicyProvider(true);

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(equation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(enter, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(equation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        scrollPane.setViewportView(topPanel);

        javax.swing.GroupLayout ContentPanelLayout = new javax.swing.GroupLayout(ContentPanel);
        ContentPanel.setLayout(ContentPanelLayout);
        ContentPanelLayout.setHorizontalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NumberPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollPane))
                .addContainerGap())
        );
        ContentPanelLayout.setVerticalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu2.setText("Edit");

        copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copy.setText("Copy");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        jMenu2.add(copy);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        paste.setText("Paste");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        jMenu2.add(paste);

        jMenuBar1.add(jMenu2);

        Help.setText("Help");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem3.setText("View Help");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        Help.add(jMenuItem3);
        Help.add(jSeparator1);

        about.setText("About Calculator");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        Help.add(about);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        if (enter.getText().length()>1) {
            enter.setText(enter.getText().substring(0,enter.getText().length()-1));
        }
        else {
            enter.setText("0");
        }
    }//GEN-LAST:event_backActionPerformed

    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
        addOperation("Mod");
    }//GEN-LAST:event_modActionPerformed

    private void plusMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusMinusActionPerformed
        if (enter.getText().charAt(0)=='0'||enter.getText().charAt(0)=='O') {
            return;
        }
        if (negative) {
            enter.setText(enter.getText().substring(1));
            negative=false;
        }
        else {
            enter.setText("-"+enter.getText());
            negative=true;
        }    
    }//GEN-LAST:event_plusMinusActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        enter.setText("√("+enter.getText()+")");
        equation.setText(equation.getText()+enter.getText());
        enter.setText("O");
        negative=false;
    }//GEN-LAST:event_sqrtActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        addNumber("1");
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        addNumber("2");
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        addNumber("3");
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        addNumber("4");
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        addNumber("5");
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        addNumber("6");
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        addNumber("7");
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        addNumber("8");
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        addNumber("9");
    }//GEN-LAST:event_nineActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        addNumber("0");
    }//GEN-LAST:event_zeroActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        //check if the this number already has a decimal point
        if (!enter.getText().contains(".")) {
            addNumber(".");
        }
    }//GEN-LAST:event_dotActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        addOperation("+");
    }//GEN-LAST:event_addActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
        addOperation("-");
    }//GEN-LAST:event_subtractActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        addOperation("*");
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        addOperation("/");
    }//GEN-LAST:event_divideActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
        enter.setText(enter.getText()+"%");
        equation.setText(equation.getText()+enter.getText());
        enter.setText("O");
        negative=false;
    }//GEN-LAST:event_percentActionPerformed

    private void oneOverXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneOverXActionPerformed
        enter.setText("1/("+enter.getText()+")");
        equation.setText(equation.getText()+enter.getText());
        enter.setText("O");
        negative=false;
    }//GEN-LAST:event_oneOverXActionPerformed

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
        String answer ="";
        if (isOperation(equation.getText().charAt(equation.getText().length()-1))) {
            answer=equation.getText()+enter.getText();
        }
        else {
            answer=equation.getText();
        }
        System.out.println(answer);
        answer = preprocess(answer);
        System.out.println(answer);
        ScriptEngineManager mgr = new ScriptEngineManager();
        ScriptEngine engine = mgr.getEngineByName("JavaScript");
        equation.setText(" ");
        try {
            answer = Double.toString((Double)engine.eval(answer));
        } catch (ScriptException ex) {
            equation.setText("Oops, error");
            answer=" ";
        }
        enter.setText(answer);
    }//GEN-LAST:event_equalsActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        equation.setText(" ");
        enter.setText("0");
    }//GEN-LAST:event_CActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        // This is nice. It makes it so easy!
        StringSelection string=new StringSelection (enter.getText());
        Clipboard clipboard=Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(string, null);
    }//GEN-LAST:event_copyActionPerformed

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
        //This is not as nice. More ugly code :(
        String string = "";
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable clip = clipboard.getContents(null);
        if (clip != null) {
            if (clip.isDataFlavorSupported(DataFlavor.stringFlavor)) {
                try {
                    string = (String) clip.getTransferData(DataFlavor.stringFlavor);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        if (string.matches("-?\\d+(\\.\\d+)?"))
            enter.setText(string);
    }//GEN-LAST:event_pasteActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JOptionPane.showMessageDialog(null, "<html><body>For help please visit: http://www.alcula.com/simplecalc_help.php.", "Help", JOptionPane.QUESTION_MESSAGE);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        JOptionPane.showMessageDialog(null, "<html><body><h1><center>Calculator</center></h1>Version 1.0<br/>Created by: Avi Goldman. <br/>Commissioned by Beth Tfiloh Computer Science Department for educational purposes.<br/><br/>&copy; Beth Tfiloh 2014<br/><br/><br/></body></html>", "About Calculator", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton C;
    private javax.swing.JPanel ContentPanel;
    private javax.swing.JMenu Help;
    private javax.swing.JPanel NumberPanel;
    private javax.swing.JMenuItem about;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JLabel background;
    private javax.swing.JMenuItem copy;
    private javax.swing.JButton divide;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JLabel enter;
    private javax.swing.JButton equals;
    private javax.swing.JLabel equation;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton mod;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton oneOverX;
    private javax.swing.JMenuItem paste;
    private javax.swing.JButton percent;
    private javax.swing.JButton plusMinus;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton subtract;
    private javax.swing.JButton three;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
